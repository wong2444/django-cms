function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$("#banner-url"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){this.page=2,this.category_id=0}Banner.prototype.initBanner=function(){var n=this.liList.eq(0).clone(),t=this.liList.eq(this.bannerCount-1).clone();this.bannerUl.append(n),this.bannerUl.prepend(t),this.bannerUl.css({width:(this.bannerCount+2)*this.bannerWidth,left:-this.bannerWidth})},Banner.prototype.animate=function(){var n=this.index;n=0===n?this.bannerCount-1:n===this.bannerCount+1?0:this.index-1,this.bannerUl.stop().animate({left:-798*this.index},500),this.pageControl.children("li").eq(n).addClass("active").siblings().removeClass("active")},Banner.prototype.initPageControl=function(){for(var n=this,t=0;t<n.bannerCount;t++){var e=$("<li></li>");n.pageControl.append(e),0===t&&e.addClass("active")}n.pageControl.css({width:12*n.bannerCount+16+16*(n.bannerCount-1)})},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){0===n?e.index=1:n===e.bannerCount-1?e.index=e.bannerCount:e.index=n+1,e.bannerUl.stop().animate({left:-798*e.index},500),e.pageControl.children("li").eq(n).addClass("active").siblings().removeClass("active")})})},Banner.prototype.toggleArrow=function(n){n?(this.leftArrow.show(),this.rightArrow.show()):(this.leftArrow.hide(),this.rightArrow.hide())},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.run=function(){this.initPageControl(),this.initBanner(),this.loop(),this.listenArrowClick(),this.listenBannerHover(),this.listenPageControl()},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenArrowClick=function(){var n=this;this.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerWidth*n.bannerCount}),n.index=n.bannerCount-1):n.index--,n.animate()}),this.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Index.prototype.listenLoadMoreEvent=function(){var i=this,r=$("#load-more-btn");r.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),i.page+=1}else r.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var o=this,n=$(".list-tab"),s=$("#load-more-btn");n.children().click(function(){var r=$(this),a=r.attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:a,p:1},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),o.page=2,o.category_id=a,r.addClass("active").siblings().removeClass("active"),s.show()}}})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},$(document).ready(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
